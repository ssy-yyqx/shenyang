/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2020 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./when-4ca4e419","./Check-430b3551","./Math-c0afb7aa","./Cartesian2-0cd32dae","./Transforms-1f147cce","./IntersectionTests-9618f995","./Plane-6d029ea4","./EllipsoidRhumbLine-aeb03c9a","./EllipsoidGeodesic-f0d5153e"],function(a,d,e,p,m,v,T,w,P,r){"use strict";var y={numberOfPoints:function(a,e,r){e=m.Cartesian3.distance(a,e);return Math.ceil(e/r)},numberOfPointsRhumbLine:function(a,e,r){e=Math.pow(a.longitude-e.longitude,2)+Math.pow(a.latitude-e.latitude,2);return Math.ceil(Math.sqrt(e/(r*r)))}},o=new m.Cartographic;y.extractHeights=function(a,e){for(var r=a.length,t=new Array(r),n=0;n<r;n++){var i=a[n];t[n]=e.cartesianToCartographic(i,o).height}return t};var A=new v.Matrix4,E=new m.Cartesian3,b=new m.Cartesian3,S=new w.Plane(m.Cartesian3.UNIT_X,0),R=new m.Cartesian3,M=new w.Plane(m.Cartesian3.UNIT_X,0),D=new m.Cartesian3,G=new m.Cartesian3,x=[];function N(a,e,r){var t=x;if(t.length=a,e===r){for(i=0;i<a;i++)t[i]=e;return t}for(var n=(r-e)/a,i=0;i<a;i++){var o=e+i*n;t[i]=o}return t}var I=new m.Cartographic,k=new m.Cartographic,V=new m.Cartesian3,L=new m.Cartesian3,_=new m.Cartesian3,O=new r.EllipsoidGeodesic,B=new P.EllipsoidRhumbLine;y.wrapLongitude=function(a,e){var r=[],t=[];if(d.defined(a)&&0<a.length){e=d.defaultValue(e,v.Matrix4.IDENTITY);var n=v.Matrix4.inverseTransformation(e,A),e=v.Matrix4.multiplyByPoint(n,m.Cartesian3.ZERO,E),i=m.Cartesian3.normalize(v.Matrix4.multiplyByPointAsVector(n,m.Cartesian3.UNIT_Y,b),b),o=w.Plane.fromPointNormal(e,i,S),n=m.Cartesian3.normalize(v.Matrix4.multiplyByPointAsVector(n,m.Cartesian3.UNIT_X,R),R),s=w.Plane.fromPointNormal(e,n,M),c=1;r.push(m.Cartesian3.clone(a[0]));for(var l=r[0],u=a.length,h=1;h<u;++h){var f,C,g=a[h];(w.Plane.getPointDistance(s,l)<0||w.Plane.getPointDistance(s,g)<0)&&(f=T.IntersectionTests.lineSegmentPlane(l,g,o,D),d.defined(f)&&(C=m.Cartesian3.multiplyByScalar(i,5e-9,G),w.Plane.getPointDistance(o,l)<0&&m.Cartesian3.negate(C,C),r.push(m.Cartesian3.add(f,C,new m.Cartesian3)),t.push(c+1),m.Cartesian3.negate(C,C),r.push(m.Cartesian3.add(f,C,new m.Cartesian3)),c=1)),r.push(m.Cartesian3.clone(a[h])),c++,l=g}t.push(c)}return{positions:r,lengths:t}},y.generateArc=function(a){var e=(a=!d.defined(a)?{}:a).positions,r=e.length,t=d.defaultValue(a.ellipsoid,m.Ellipsoid.WGS84),n=d.defaultValue(a.height,0),i=v.isArray(n);if(r<1)return[];if(1===r){var o,s=t.scaleToGeodeticSurface(e[0],L);return 0!==(n=i?n[0]:n)&&(o=t.geodeticSurfaceNormal(s,V),m.Cartesian3.multiplyByScalar(o,n,o),m.Cartesian3.add(s,o,s)),[s.x,s.y,s.z]}var c=a.minDistance;d.defined(c)||(C=d.defaultValue(a.granularity,p.CesiumMath.RADIANS_PER_DEGREE),c=p.CesiumMath.chordLength(C,t.maximumRadius));for(var l=0,u=0;u<r-1;u++)l+=y.numberOfPoints(e[u],e[u+1],c);var a=3*(l+1),h=new Array(a),f=0;for(u=0;u<r-1;u++)f=function(a,e,r,t,n,i,o,s){var c=t.scaleToGeodeticSurface(a,L),l=t.scaleToGeodeticSurface(e,_),u=y.numberOfPoints(a,e,r),c=t.cartesianToCartographic(c,I),l=t.cartesianToCartographic(l,k),h=N(u,n,i);O.setEndPoints(c,l);var f=O.surfaceDistance/u,C=s;c.height=n;var g=t.cartographicToCartesian(c,V);m.Cartesian3.pack(g,o,C),C+=3;for(var d=1;d<u;d++){var p=O.interpolateUsingSurfaceDistance(d*f,k);p.height=h[d],g=t.cartographicToCartesian(p,V),m.Cartesian3.pack(g,o,C),C+=3}return C}(e[u],e[u+1],c,t,i?n[u]:n,i?n[u+1]:n,h,f);x.length=0;var C=e[r-1],C=t.cartesianToCartographic(C,I);C.height=i?n[r-1]:n;C=t.cartographicToCartesian(C,V);return m.Cartesian3.pack(C,h,a-3),h};var U=new m.Cartographic,z=new m.Cartographic;y.generateRhumbArc=function(a){var e=(a=!d.defined(a)?{}:a).positions,r=e.length,t=d.defaultValue(a.ellipsoid,m.Ellipsoid.WGS84),n=d.defaultValue(a.height,0),i=v.isArray(n);if(r<1)return[];if(1===r){var o,s=t.scaleToGeodeticSurface(e[0],L);return 0!==(n=i?n[0]:n)&&(o=t.geodeticSurfaceNormal(s,V),m.Cartesian3.multiplyByScalar(o,n,o),m.Cartesian3.add(s,o,s)),[s.x,s.y,s.z]}for(var c,l=d.defaultValue(a.granularity,p.CesiumMath.RADIANS_PER_DEGREE),u=0,h=t.cartesianToCartographic(e[0],U),f=0;f<r-1;f++)c=t.cartesianToCartographic(e[f+1],z),u+=y.numberOfPointsRhumbLine(h,c,l),h=m.Cartographic.clone(c,U);var s=3*(u+1),C=new Array(s),g=0;for(f=0;f<r-1;f++)g=function(a,e,r,t,n,i,o,s){var a=t.scaleToGeodeticSurface(a,L),e=t.scaleToGeodeticSurface(e,_),a=t.cartesianToCartographic(a,I),e=t.cartesianToCartographic(e,k),c=y.numberOfPointsRhumbLine(a,e,r),l=N(c,n,i);(B=!B.ellipsoid.equals(t)?new P.EllipsoidRhumbLine(void 0,void 0,t):B).setEndPoints(a,e);var u=B.surfaceDistance/c,h=s;a.height=n;var f=t.cartographicToCartesian(a,V);m.Cartesian3.pack(f,o,h),h+=3;for(var C=1;C<c;C++){var g=B.interpolateUsingSurfaceDistance(C*u,k);g.height=l[C],f=t.cartographicToCartesian(g,V),m.Cartesian3.pack(f,o,h),h+=3}return h}(e[f],e[f+1],l,t,i?n[f]:n,i?n[f+1]:n,C,g);x.length=0;a=e[r-1],a=t.cartesianToCartographic(a,I);a.height=i?n[r-1]:n;a=t.cartographicToCartesian(a,V);return m.Cartesian3.pack(a,C,s-3),C},y.generateCartesianArc=function(a){for(var e=y.generateArc(a),r=e.length/3,t=new Array(r),n=0;n<r;n++)t[n]=m.Cartesian3.unpack(e,3*n);return t},y.generateCartesianRhumbArc=function(a){for(var e=y.generateRhumbArc(a),r=e.length/3,t=new Array(r),n=0;n<r;n++)t[n]=m.Cartesian3.unpack(e,3*n);return t},a.PolylinePipeline=y});
